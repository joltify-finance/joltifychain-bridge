cache:
  paths:
    - .cache

before_script:
  - mkdir -p .cache
  - export GOPATH="$CI_PROJECT_DIR/.cache"
  - go get -v -d ./...

stages:
  - test
  #- build
#  - smoke-test
#  - release

unit_tests:
  stage: test
  coverage: '/total:\s+\(statements\)\s+(\d+.\d+\%)/'
  script:
    - go test   -v -coverprofile=coverage.out -timeout 15m ./...
    - go tool cover -func=coverage.out

lint_code:
  image: golangci/golangci-lint
  stage: test
  before_script:
    - go get mvdan.cc/gofumpt
  script:
    - golangci-lint run -v --timeout 60s

#build-docker:
#  stage: build
#  image: docker:stable
#  only:
#    - master
#  services:
#    - docker:19.03.5-dind
#  variables:
#    DOCKER_HOST: tcp://docker:2375
#    DOCKER_DRIVER: overlay2
#  before_script:
#    - apk update
#    - apk add make git jq curl
#    - make docker-gitlab-login
#  script:
#    - make docker-gitlab-build
#    - make docker-gitlab-push

#release:
#  stage: release
#  image: registry.gitlab.com/thorchain/misc/release-tool:latest
#  only:
#    - master
#  except:
#    - schedules
#  script:
#    - release-tool changelog

#build:
#  stage: build
#  image: golang:1.7
#  before_script:
#    # Create a symbolic link under $GOPATH, this is needed for local build
#    # i.e. /go/src/gitlab.com/ykyuen/gitlab-ci-go-build
#    - cd $GOPATH/src
#    - mkdir -p gitlab.com/$CI_PROJECT_NAMESPACE
#    - cd gitlab.com/$CI_PROJECT_NAMESPACE
#    - ln -s $CI_PROJECT_DIR
#    - cd $CI_PROJECT_NAME
#  script:
#    # Compile and name the binary
#    - go build
